

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Nov 26 00:18:13 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.30
    22                           ; Generated 15/09/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F15244 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009B                     	;# 
    80  009C                     	;# 
    81  009D                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  0119                     	;# 
    87  011A                     	;# 
    88  011B                     	;# 
    89  011B                     	;# 
    90  011C                     	;# 
    91  011D                     	;# 
    92  011E                     	;# 
    93  011F                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  018E                     	;# 
    97  018F                     	;# 
    98  0190                     	;# 
    99  0191                     	;# 
   100  0192                     	;# 
   101  020C                     	;# 
   102  020D                     	;# 
   103  020E                     	;# 
   104  020E                     	;# 
   105  020F                     	;# 
   106  020F                     	;# 
   107  0210                     	;# 
   108  0210                     	;# 
   109  0211                     	;# 
   110  0211                     	;# 
   111  028C                     	;# 
   112  028C                     	;# 
   113  028D                     	;# 
   114  028D                     	;# 
   115  028E                     	;# 
   116  028F                     	;# 
   117  0290                     	;# 
   118  0291                     	;# 
   119  030C                     	;# 
   120  030C                     	;# 
   121  030D                     	;# 
   122  030E                     	;# 
   123  030F                     	;# 
   124  0310                     	;# 
   125  0310                     	;# 
   126  0311                     	;# 
   127  0312                     	;# 
   128  0313                     	;# 
   129  0314                     	;# 
   130  0314                     	;# 
   131  0315                     	;# 
   132  0316                     	;# 
   133  0318                     	;# 
   134  0318                     	;# 
   135  0319                     	;# 
   136  031A                     	;# 
   137  059C                     	;# 
   138  059C                     	;# 
   139  059D                     	;# 
   140  059D                     	;# 
   141  059E                     	;# 
   142  059F                     	;# 
   143  070C                     	;# 
   144  070D                     	;# 
   145  070E                     	;# 
   146  0716                     	;# 
   147  0717                     	;# 
   148  0718                     	;# 
   149  080C                     	;# 
   150  0811                     	;# 
   151  0813                     	;# 
   152  0814                     	;# 
   153  081A                     	;# 
   154  081A                     	;# 
   155  081B                     	;# 
   156  081C                     	;# 
   157  081C                     	;# 
   158  081D                     	;# 
   159  081E                     	;# 
   160  081F                     	;# 
   161  088E                     	;# 
   162  0890                     	;# 
   163  0891                     	;# 
   164  0892                     	;# 
   165  0893                     	;# 
   166  090C                     	;# 
   167  1E8F                     	;# 
   168  1E90                     	;# 
   169  1E91                     	;# 
   170  1E92                     	;# 
   171  1E93                     	;# 
   172  1E9C                     	;# 
   173  1EA1                     	;# 
   174  1EA2                     	;# 
   175  1EC3                     	;# 
   176  1EC5                     	;# 
   177  1EC6                     	;# 
   178  1EC7                     	;# 
   179  1ECB                     	;# 
   180  1ECB                     	;# 
   181  1ECB                     	;# 
   182  1ECC                     	;# 
   183  1ECC                     	;# 
   184  1ECC                     	;# 
   185  1F10                     	;# 
   186  1F11                     	;# 
   187  1F12                     	;# 
   188  1F14                     	;# 
   189  1F15                     	;# 
   190  1F1C                     	;# 
   191  1F1D                     	;# 
   192  1F1E                     	;# 
   193  1F1F                     	;# 
   194  1F20                     	;# 
   195  1F21                     	;# 
   196  1F22                     	;# 
   197  1F23                     	;# 
   198  1F24                     	;# 
   199  1F25                     	;# 
   200  1F26                     	;# 
   201  1F27                     	;# 
   202  1F38                     	;# 
   203  1F39                     	;# 
   204  1F3A                     	;# 
   205  1F3B                     	;# 
   206  1F3C                     	;# 
   207  1F3D                     	;# 
   208  1F3E                     	;# 
   209  1F3F                     	;# 
   210  1F43                     	;# 
   211  1F44                     	;# 
   212  1F45                     	;# 
   213  1F46                     	;# 
   214  1F47                     	;# 
   215  1F48                     	;# 
   216  1F49                     	;# 
   217  1F4A                     	;# 
   218  1F4E                     	;# 
   219  1F4F                     	;# 
   220  1F50                     	;# 
   221  1F51                     	;# 
   222  1F52                     	;# 
   223  1F53                     	;# 
   224  1F54                     	;# 
   225  1F55                     	;# 
   226  1FE4                     	;# 
   227  1FE5                     	;# 
   228  1FE6                     	;# 
   229  1FE7                     	;# 
   230  1FE8                     	;# 
   231  1FE8                     	;# 
   232  1FE9                     	;# 
   233  1FEA                     	;# 
   234  1FEB                     	;# 
   235  1FED                     	;# 
   236  1FEE                     	;# 
   237  1FEF                     	;# 
   238                           
   239                           	psect	nvBANK0
   240  0026                     __pnvBANK0:
   241  0026                     _estado:
   242  0026                     	ds	2
   243  001A                     _LATCbits	set	26
   244  0019                     _LATBbits	set	25
   245  0014                     _TRISC	set	20
   246  0013                     _TRISB	set	19
   247  0012                     _TRISA	set	18
   248  001A                     _LATC	set	26
   249  0019                     _LATB	set	25
   250  0018                     _LATA	set	24
   251  00A7                     _TRISC7	set	167
   252  00A0                     _TRISC0	set	160
   253  00A2                     _TRISC2	set	162
   254  0095                     _TRISA5	set	149
   255  009D                     _TRISB5	set	157
   256  0092                     _TRISA2	set	146
   257  009B                     _ADRESL	set	155
   258  009C                     _ADRESH	set	156
   259  009D                     _ADCON0bits	set	157
   260  009E                     _ADCON1	set	158
   261  009D                     _ADCON0	set	157
   262  028E                     _T2CON	set	654
   263  028C                     _T2TMR	set	652
   264  028D                     _T2PR	set	653
   265  0291                     _T2RST	set	657
   266  028F                     _T2HLT	set	655
   267  0290                     _T2CLKCON	set	656
   268  0314                     _PWM3DCL	set	788
   269  0315                     _PWM3DCH	set	789
   270  0316                     _PWM3CON	set	790
   271  070D                     _PIR1bits	set	1805
   272  0892                     _OSCTUNE	set	2194
   273  0893                     _OSCFRQ	set	2195
   274  0891                     _OSCEN	set	2193
   275  1F12                     _RA2PPS	set	7954
   276  1F43                     _ANSELBbits	set	8003
   277  1F38                     _ANSELAbits	set	7992
   278  1F52                     _INLVLC	set	8018
   279  1F47                     _INLVLB	set	8007
   280  1F3C                     _INLVLA	set	7996
   281  1F51                     _SLRCONC	set	8017
   282  1F46                     _SLRCONB	set	8006
   283  1F3B                     _SLRCONA	set	7995
   284  1F50                     _ODCONC	set	8016
   285  1F45                     _ODCONB	set	8005
   286  1F3A                     _ODCONA	set	7994
   287  1F4F                     _WPUC	set	8015
   288  1F39                     _WPUA	set	7993
   289  1F44                     _WPUB	set	8004
   290  1F38                     _ANSELA	set	7992
   291  1F43                     _ANSELB	set	8003
   292  1F4E                     _ANSELC	set	8014
   293                           
   294                           	psect	cinit
   295  07EC                     start_initialization:	
   296                           ; #config settings
   297                           
   298  07EC                     __initialization:
   299                           
   300                           ; Clear objects allocated to COMMON
   301  07EC  01F0               	clrf	__pbssCOMMON& (0+127)
   302  07ED  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   303  07EE  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   304  07EF  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   305  07F0  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   306  07F1  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   307  07F2  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   308  07F3  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   309  07F4  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   310  07F5  01F9               	clrf	(__pbssCOMMON+9)& (0+127)
   311                           
   312                           ; Clear objects allocated to BANK0
   313  07F6  0140               	movlb	0	; select bank0
   314  07F7  01A0               	clrf	__pbssBANK0& (0+127)
   315  07F8  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   316  07F9  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   317  07FA  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   318  07FB  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   319  07FC  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   320  07FD                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323  07FD                     __end_of__initialization:
   324  07FD  0140               	movlb	0
   325  07FE  3187  2F0A         	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssCOMMON
   328  0070                     __pbssCOMMON:
   329  0070                     _LecA5:
   330  0070                     	ds	2
   331  0072                     _LecA4:
   332  0072                     	ds	2
   333  0074                     _Lectura:
   334  0074                     	ds	2
   335  0076                     _resultLow:
   336  0076                     	ds	2
   337  0078                     _resultHigh:
   338  0078                     	ds	2
   339                           
   340                           	psect	bssBANK0
   341  0020                     __pbssBANK0:
   342  0020                     _LecB7:
   343  0020                     	ds	2
   344  0022                     _frecuencia:
   345  0022                     	ds	2
   346  0024                     _cicloutil:
   347  0024                     	ds	2
   348                           
   349                           	psect	cstackCOMMON
   350  007A                     __pcstackCOMMON:
   351  007A                     ?_PIN_MANAGER_Initialize:
   352  007A                     ??_PIN_MANAGER_Initialize:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  007A                     ?_OSCILLATOR_Initialize:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  007A                     ??_OSCILLATOR_Initialize:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  007A                     ?_TMR2_Initialize:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  007A                     ?_PWM3_Initialize:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  007A                     ??_PWM3_Initialize:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  007A                     ?_ADC:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  007A                     ??_ADC:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  007A                     ?_leer:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  007A                     ??_leer:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  007A                     ?_Read_adc:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  007A                     ??_Read_adc:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  007A                     ?_calcular:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  007A                     ??_calcular:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  007A                     ?_main:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  007A                     TMR2_Initialize@nuevafrec:	
   398                           ; 1 bytes @ 0x0
   399                           
   400                           
   401                           ; 2 bytes @ 0x0
   402  007A                     	ds	2
   403  007C                     ??_TMR2_Initialize:
   404  007C                     ??_main:	
   405                           ; 1 bytes @ 0x2
   406                           
   407                           
   408                           ; 1 bytes @ 0x2
   409  007C                     	ds	1
   410                           
   411                           	psect	maintext
   412  070A                     __pmaintext:	
   413 ;;
   414 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   415 ;;
   416 ;; *************** function _main *****************
   417 ;; Defined at:
   418 ;;		line 213 in file "newmain.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;		None
   421 ;; Auto vars:     Size  Location     Type
   422 ;;		None
   423 ;; Return value:  Size  Location     Type
   424 ;;                  1    wreg      void 
   425 ;; Registers used:
   426 ;;		wreg, status,2, status,0, pclath, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : B3F/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   432 ;;      Params:         0       0       0       0       0       0       0       0
   433 ;;      Locals:         0       0       0       0       0       0       0       0
   434 ;;      Temps:          1       0       0       0       0       0       0       0
   435 ;;      Totals:         1       0       0       0       0       0       0       0
   436 ;;Total ram usage:        1 bytes
   437 ;; Hardware stack levels required when called:    2
   438 ;; This function calls:
   439 ;;		_ADC
   440 ;;		_OSCILLATOR_Initialize
   441 ;;		_PIN_MANAGER_Initialize
   442 ;;		_PWM3_Initialize
   443 ;;		_Read_adc
   444 ;;		_TMR2_Initialize
   445 ;;		_calcular
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _main
   453  070A                     _main:
   454  070A                     l924:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;newmain.c: 215:     PIN_MANAGER_Initialize();
   460  070A  3187  275F  3187   	fcall	_PIN_MANAGER_Initialize
   461  070D                     l926:
   462                           
   463                           ;newmain.c: 216:     OSCILLATOR_Initialize();
   464  070D  3186  26C1  3187   	fcall	_OSCILLATOR_Initialize
   465  0710                     l928:
   466                           
   467                           ;newmain.c: 217:     TMR2_Initialize(249);
   468  0710  30F9               	movlw	249
   469  0711  00FA               	movwf	TMR2_Initialize@nuevafrec
   470  0712  3000               	movlw	0
   471  0713  00FB               	movwf	TMR2_Initialize@nuevafrec+1
   472  0714  3186  26D4  3187   	fcall	_TMR2_Initialize
   473  0717                     l930:
   474                           
   475                           ;newmain.c: 218:     PWM3_Initialize();
   476  0717  3186  26CC  3187   	fcall	_PWM3_Initialize
   477  071A                     l932:
   478                           
   479                           ;newmain.c: 219:     ADC();
   480  071A  3186  26C6  3187   	fcall	_ADC
   481  071D                     l934:
   482                           
   483                           ;newmain.c: 220:     estado=1;
   484  071D  3001               	movlw	1
   485  071E  0140               	movlb	0	; select bank0
   486  071F  00A6               	movwf	_estado
   487  0720  3000               	movlw	0
   488  0721  00A7               	movwf	_estado+1
   489  0722                     l171:	
   490                           ;newmain.c: 221:     while(1){
   491                           
   492                           
   493                           ;newmain.c: 222:       Read_adc();
   494  0722  3187  2793  3187   	fcall	_Read_adc
   495                           
   496                           ;newmain.c: 223:       calcular();
   497  0725  3186  26E2  3187   	fcall	_calcular
   498  0728                     l936:
   499                           
   500                           ;newmain.c: 224:       _delay((unsigned long)((60)*(1000000/4000.0)));
   501  0728  3014               	movlw	20
   502  0729  00FC               	movwf	??_main
   503  072A  307A               	movlw	122
   504  072B                     u207:
   505  072B  0B89               	decfsz	9,f
   506  072C  2F2B               	goto	u207
   507  072D  0BFC               	decfsz	??_main,f
   508  072E  2F2B               	goto	u207
   509  072F  2F22               	goto	l171
   510  0730  3180  2802         	ljmp	start
   511  0732                     __end_of_main:
   512                           
   513                           	psect	text1
   514  06E2                     __ptext1:	
   515 ;; *************** function _calcular *****************
   516 ;; Defined at:
   517 ;;		line 197 in file "newmain.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   531 ;;      Params:         0       0       0       0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_main
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _calcular
   546  06E2                     _calcular:
   547  06E2                     l914:	
   548                           ;incstack = 0
   549                           ; Regs used in _calcular: [wreg]
   550                           
   551                           
   552                           ;newmain.c: 198:     if((LecB7>=LecA4)&&(LecB7>=LecA5)){
   553  06E2  0873               	movf	_LecA4+1,w
   554  06E3  0140               	movlb	0	; select bank0
   555  06E4  0221               	subwf	_LecB7+1,w
   556  06E5  1D03               	skipz
   557  06E6  2EE9               	goto	u175
   558  06E7  0872               	movf	_LecA4,w
   559  06E8  0220               	subwf	_LecB7,w
   560  06E9                     u175:
   561  06E9  1C03               	skipc
   562  06EA  2EEC               	goto	u171
   563  06EB  2EED               	goto	u170
   564  06EC                     u171:
   565  06EC  2EFA               	goto	l920
   566  06ED                     u170:
   567  06ED                     l916:
   568  06ED  0871               	movf	_LecA5+1,w
   569  06EE  0221               	subwf	_LecB7+1,w
   570  06EF  1D03               	skipz
   571  06F0  2EF3               	goto	u185
   572  06F1  0870               	movf	_LecA5,w
   573  06F2  0220               	subwf	_LecB7,w
   574  06F3                     u185:
   575  06F3  1C03               	skipc
   576  06F4  2EF6               	goto	u181
   577  06F5  2EF7               	goto	u180
   578  06F6                     u181:
   579  06F6  2EFA               	goto	l920
   580  06F7                     u180:
   581  06F7                     l918:
   582                           
   583                           ;newmain.c: 199:         LATBbits.LATB5 = 1;
   584  06F7  1699               	bsf	25,5	;volatile
   585                           
   586                           ;newmain.c: 200:         LATCbits.LATC0 = 1;
   587  06F8  141A               	bsf	26,0	;volatile
   588                           
   589                           ;newmain.c: 201:     }
   590  06F9  2F09               	goto	l166
   591  06FA                     l920:
   592  06FA  0871               	movf	_LecA5+1,w
   593  06FB  0273               	subwf	_LecA4+1,w
   594  06FC  1D03               	skipz
   595  06FD  2F00               	goto	u195
   596  06FE  0870               	movf	_LecA5,w
   597  06FF  0272               	subwf	_LecA4,w
   598  0700                     u195:
   599  0700  1803               	skipnc
   600  0701  2F03               	goto	u191
   601  0702  2F04               	goto	u190
   602  0703                     u191:
   603  0703  2F07               	goto	l164
   604  0704                     u190:
   605  0704                     l922:
   606                           
   607                           ;newmain.c: 203:     { LATBbits.LATB5 = 0;
   608  0704  1299               	bcf	25,5	;volatile
   609                           
   610                           ;newmain.c: 204:         LATCbits.LATC0 = 1;
   611  0705  141A               	bsf	26,0	;volatile
   612                           
   613                           ;newmain.c: 205:     }
   614  0706  2F09               	goto	l166
   615  0707                     l164:	
   616                           ;newmain.c: 206:     else{LATBbits.LATB5 = 1;
   617                           
   618  0707  1699               	bsf	25,5	;volatile
   619                           
   620                           ;newmain.c: 207:         LATCbits.LATC0 = 0;
   621  0708  101A               	bcf	26,0	;volatile
   622  0709                     l166:
   623  0709  0008               	return
   624  070A                     __end_of_calcular:
   625                           
   626                           	psect	text2
   627  06D4                     __ptext2:	
   628 ;; *************** function _TMR2_Initialize *****************
   629 ;; Defined at:
   630 ;;		line 122 in file "newmain.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  nuevafrec       2    0[COMMON] int 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   644 ;;      Params:         2       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0
   647 ;;      Totals:         2       0       0       0       0       0       0       0
   648 ;;Total ram usage:        2 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_main
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           
   658                           ;psect for function _TMR2_Initialize
   659  06D4                     _TMR2_Initialize:
   660  06D4                     l868:	
   661                           ;incstack = 0
   662                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   663                           
   664                           
   665                           ;newmain.c: 122: void TMR2_Initialize(int nuevafrec);newmain.c: 123: {;newmain.c: 124:  
      +                             T2CLKCON = 0x01;
   666  06D4  3001               	movlw	1
   667  06D5  0145               	movlb	5	; select bank5
   668  06D6  0090               	movwf	16	;volatile
   669  06D7                     l870:
   670                           
   671                           ;newmain.c: 125:     T2HLT = 0x00;
   672  06D7  018F               	clrf	15	;volatile
   673  06D8                     l872:
   674                           
   675                           ;newmain.c: 126:     T2RST = 0x00;
   676  06D8  0191               	clrf	17	;volatile
   677                           
   678                           ;newmain.c: 127:     T2PR = nuevafrec;
   679  06D9  087A               	movf	TMR2_Initialize@nuevafrec,w
   680  06DA  008D               	movwf	13	;volatile
   681  06DB                     l874:
   682                           
   683                           ;newmain.c: 128:     T2TMR = 0x00;
   684  06DB  018C               	clrf	12	;volatile
   685  06DC                     l876:
   686                           
   687                           ;newmain.c: 129:     PIR1bits.TMR2IF = 0;
   688  06DC  014E               	movlb	14	; select bank14
   689  06DD  130D               	bcf	13,6	;volatile
   690  06DE                     l878:
   691                           
   692                           ;newmain.c: 130:     T2CON = 0b10000000;
   693  06DE  3080               	movlw	128
   694  06DF  0145               	movlb	5	; select bank5
   695  06E0  008E               	movwf	14	;volatile
   696  06E1                     l129:
   697  06E1  0008               	return
   698  06E2                     __end_of_TMR2_Initialize:
   699                           
   700                           	psect	text3
   701  0793                     __ptext3:	
   702 ;; *************** function _Read_adc *****************
   703 ;; Defined at:
   704 ;;		line 164 in file "newmain.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   718 ;;      Params:         0       0       0       0       0       0       0       0
   719 ;;      Locals:         0       0       0       0       0       0       0       0
   720 ;;      Temps:          2       0       0       0       0       0       0       0
   721 ;;      Totals:         2       0       0       0       0       0       0       0
   722 ;;Total ram usage:        2 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; Hardware stack levels required when called:    1
   725 ;; This function calls:
   726 ;;		_leer
   727 ;; This function is called by:
   728 ;;		_main
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _Read_adc
   734  0793                     _Read_adc:
   735  0793                     l884:	
   736                           ;incstack = 0
   737                           ; Regs used in _Read_adc: [wreg+status,2+status,0+pclath+cstack]
   738                           
   739                           
   740                           ;newmain.c: 165:      ADCON0= 0b00010001;
   741  0793  3011               	movlw	17
   742  0794  0141               	movlb	1	; select bank1
   743  0795  009D               	movwf	29	;volatile
   744  0796                     l886:
   745                           
   746                           ;newmain.c: 166:      ADCON0bits.GO = 1;
   747  0796  149D               	bsf	29,1	;volatile
   748  0797                     l147:	
   749                           ;newmain.c: 167:      while (ADCON0bits.GO);
   750                           
   751  0797  189D               	btfsc	29,1	;volatile
   752  0798  2F9A               	goto	u141
   753  0799  2F9B               	goto	u140
   754  079A                     u141:
   755  079A  2F97               	goto	l147
   756  079B                     u140:
   757  079B                     l888:
   758                           
   759                           ;newmain.c: 168:      resultHigh = ADRESH;
   760  079B  081C               	movf	28,w	;volatile
   761  079C  00FA               	movwf	??_Read_adc
   762  079D  01FB               	clrf	??_Read_adc+1
   763  079E  087A               	movf	??_Read_adc,w
   764  079F  00F8               	movwf	_resultHigh
   765  07A0  087B               	movf	??_Read_adc+1,w
   766  07A1  00F9               	movwf	_resultHigh+1
   767                           
   768                           ;newmain.c: 169:      resultLow = ADRESL;
   769  07A2  081B               	movf	27,w	;volatile
   770  07A3  00FA               	movwf	??_Read_adc
   771  07A4  01FB               	clrf	??_Read_adc+1
   772  07A5  087A               	movf	??_Read_adc,w
   773  07A6  00F6               	movwf	_resultLow
   774  07A7  087B               	movf	??_Read_adc+1,w
   775  07A8  00F7               	movwf	_resultLow+1
   776  07A9                     l890:
   777                           
   778                           ;newmain.c: 170:      leer();
   779  07A9  3187  2732  3187   	fcall	_leer
   780  07AC                     l892:
   781                           
   782                           ;newmain.c: 171:      LecA4 = Lectura;
   783  07AC  0875               	movf	_Lectura+1,w
   784  07AD  00F3               	movwf	_LecA4+1
   785  07AE  0874               	movf	_Lectura,w
   786  07AF  00F2               	movwf	_LecA4
   787  07B0                     l894:
   788                           
   789                           ;newmain.c: 173:      ADCON0= 0b00010101;
   790  07B0  3015               	movlw	21
   791  07B1  0141               	movlb	1	; select bank1
   792  07B2  009D               	movwf	29	;volatile
   793  07B3                     l896:
   794                           
   795                           ;newmain.c: 174:      ADCON0bits.GO = 1;
   796  07B3  149D               	bsf	29,1	;volatile
   797  07B4                     l150:	
   798                           ;newmain.c: 175:      while (ADCON0bits.GO);
   799                           
   800  07B4  189D               	btfsc	29,1	;volatile
   801  07B5  2FB7               	goto	u151
   802  07B6  2FB8               	goto	u150
   803  07B7                     u151:
   804  07B7  2FB4               	goto	l150
   805  07B8                     u150:
   806  07B8                     l898:
   807                           
   808                           ;newmain.c: 176:      resultHigh = ADRESH;
   809  07B8  081C               	movf	28,w	;volatile
   810  07B9  00FA               	movwf	??_Read_adc
   811  07BA  01FB               	clrf	??_Read_adc+1
   812  07BB  087A               	movf	??_Read_adc,w
   813  07BC  00F8               	movwf	_resultHigh
   814  07BD  087B               	movf	??_Read_adc+1,w
   815  07BE  00F9               	movwf	_resultHigh+1
   816                           
   817                           ;newmain.c: 177:      resultLow = ADRESL;
   818  07BF  081B               	movf	27,w	;volatile
   819  07C0  00FA               	movwf	??_Read_adc
   820  07C1  01FB               	clrf	??_Read_adc+1
   821  07C2  087A               	movf	??_Read_adc,w
   822  07C3  00F6               	movwf	_resultLow
   823  07C4  087B               	movf	??_Read_adc+1,w
   824  07C5  00F7               	movwf	_resultLow+1
   825  07C6                     l900:
   826                           
   827                           ;newmain.c: 178:      leer();
   828  07C6  3187  2732  3187   	fcall	_leer
   829  07C9                     l902:
   830                           
   831                           ;newmain.c: 179:      LecA5 = Lectura;
   832  07C9  0875               	movf	_Lectura+1,w
   833  07CA  00F1               	movwf	_LecA5+1
   834  07CB  0874               	movf	_Lectura,w
   835  07CC  00F0               	movwf	_LecA5
   836  07CD                     l904:
   837                           
   838                           ;newmain.c: 181:      ADCON0= 0b00111101;
   839  07CD  303D               	movlw	61
   840  07CE  0141               	movlb	1	; select bank1
   841  07CF  009D               	movwf	29	;volatile
   842  07D0                     l906:
   843                           
   844                           ;newmain.c: 182:      ADCON0bits.GO = 1;
   845  07D0  149D               	bsf	29,1	;volatile
   846  07D1                     l153:	
   847                           ;newmain.c: 183:      while (ADCON0bits.GO);
   848                           
   849  07D1  189D               	btfsc	29,1	;volatile
   850  07D2  2FD4               	goto	u161
   851  07D3  2FD5               	goto	u160
   852  07D4                     u161:
   853  07D4  2FD1               	goto	l153
   854  07D5                     u160:
   855  07D5                     l908:
   856                           
   857                           ;newmain.c: 184:      resultHigh = ADRESH;
   858  07D5  081C               	movf	28,w	;volatile
   859  07D6  00FA               	movwf	??_Read_adc
   860  07D7  01FB               	clrf	??_Read_adc+1
   861  07D8  087A               	movf	??_Read_adc,w
   862  07D9  00F8               	movwf	_resultHigh
   863  07DA  087B               	movf	??_Read_adc+1,w
   864  07DB  00F9               	movwf	_resultHigh+1
   865                           
   866                           ;newmain.c: 185:      resultLow = ADRESL;
   867  07DC  081B               	movf	27,w	;volatile
   868  07DD  00FA               	movwf	??_Read_adc
   869  07DE  01FB               	clrf	??_Read_adc+1
   870  07DF  087A               	movf	??_Read_adc,w
   871  07E0  00F6               	movwf	_resultLow
   872  07E1  087B               	movf	??_Read_adc+1,w
   873  07E2  00F7               	movwf	_resultLow+1
   874  07E3                     l910:
   875                           
   876                           ;newmain.c: 186:      leer();
   877  07E3  3187  2732  3187   	fcall	_leer
   878  07E6                     l912:
   879                           
   880                           ;newmain.c: 187:      LecB7 = Lectura;
   881  07E6  0875               	movf	_Lectura+1,w
   882  07E7  0140               	movlb	0	; select bank0
   883  07E8  00A1               	movwf	_LecB7+1
   884  07E9  0874               	movf	_Lectura,w
   885  07EA  00A0               	movwf	_LecB7
   886  07EB                     l156:
   887  07EB  0008               	return
   888  07EC                     __end_of_Read_adc:
   889                           
   890                           	psect	text4
   891  0732                     __ptext4:	
   892 ;; *************** function _leer *****************
   893 ;; Defined at:
   894 ;;		line 149 in file "newmain.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   908 ;;      Params:         0       0       0       0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0       0       0       0
   910 ;;      Temps:          0       0       0       0       0       0       0       0
   911 ;;      Totals:         0       0       0       0       0       0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; This function calls:
   915 ;;		Nothing
   916 ;; This function is called by:
   917 ;;		_Read_adc
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _leer
   923  0732                     _leer:
   924  0732                     l820:	
   925                           ;incstack = 0
   926                           ; Regs used in _leer: [wreg+status,2+status,0]
   927                           
   928                           
   929                           ;newmain.c: 150:       if(resultHigh==0){
   930  0732  0878               	movf	_resultHigh,w
   931  0733  0479               	iorwf	_resultHigh+1,w
   932  0734  1D03               	btfss	3,2
   933  0735  2F37               	goto	u111
   934  0736  2F38               	goto	u110
   935  0737                     u111:
   936  0737  2F3D               	goto	l824
   937  0738                     u110:
   938  0738                     l822:
   939                           
   940                           ;newmain.c: 151:           Lectura=resultLow;
   941  0738  0877               	movf	_resultLow+1,w
   942  0739  00F5               	movwf	_Lectura+1
   943  073A  0876               	movf	_resultLow,w
   944  073B  00F4               	movwf	_Lectura
   945                           
   946                           ;newmain.c: 152:       }
   947  073C  2F5E               	goto	l144
   948  073D                     l824:
   949  073D  0378               	decf	_resultHigh,w
   950  073E  0479               	iorwf	_resultHigh+1,w
   951  073F  1D03               	btfss	3,2
   952  0740  2F42               	goto	u121
   953  0741  2F43               	goto	u120
   954  0742                     u121:
   955  0742  2F4A               	goto	l828
   956  0743                     u120:
   957  0743                     l826:
   958                           
   959                           ;newmain.c: 154:           Lectura=256+resultLow;
   960  0743  0876               	movf	_resultLow,w
   961  0744  3E00               	addlw	0
   962  0745  00F4               	movwf	_Lectura
   963  0746  3001               	movlw	1
   964  0747  3D77               	addwfc	_resultLow+1,w
   965  0748  00F5               	movwf	_Lectura+1
   966                           
   967                           ;newmain.c: 155:       }
   968  0749  2F5E               	goto	l144
   969  074A                     l828:
   970  074A  3002               	movlw	2
   971  074B  0678               	xorwf	_resultHigh,w
   972  074C  0479               	iorwf	_resultHigh+1,w
   973  074D  1D03               	btfss	3,2
   974  074E  2F50               	goto	u131
   975  074F  2F51               	goto	u130
   976  0750                     u131:
   977  0750  2F58               	goto	l832
   978  0751                     u130:
   979  0751                     l830:
   980                           
   981                           ;newmain.c: 157:           Lectura=512+resultLow;
   982  0751  0876               	movf	_resultLow,w
   983  0752  3E00               	addlw	0
   984  0753  00F4               	movwf	_Lectura
   985  0754  3002               	movlw	2
   986  0755  3D77               	addwfc	_resultLow+1,w
   987  0756  00F5               	movwf	_Lectura+1
   988                           
   989                           ;newmain.c: 158:       }
   990  0757  2F5E               	goto	l144
   991  0758                     l832:
   992                           
   993                           ;newmain.c: 160:           Lectura=768+resultLow;
   994  0758  0876               	movf	_resultLow,w
   995  0759  3E00               	addlw	0
   996  075A  00F4               	movwf	_Lectura
   997  075B  3003               	movlw	3
   998  075C  3D77               	addwfc	_resultLow+1,w
   999  075D  00F5               	movwf	_Lectura+1
  1000  075E                     l144:
  1001  075E  0008               	return
  1002  075F                     __end_of_leer:
  1003                           
  1004                           	psect	text5
  1005  06CC                     __ptext5:	
  1006 ;; *************** function _PWM3_Initialize *****************
  1007 ;; Defined at:
  1008 ;;		line 133 in file "newmain.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;		None
  1011 ;; Auto vars:     Size  Location     Type
  1012 ;;		None
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  1    wreg      void 
  1015 ;; Registers used:
  1016 ;;		wreg
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1022 ;;      Params:         0       0       0       0       0       0       0       0
  1023 ;;      Locals:         0       0       0       0       0       0       0       0
  1024 ;;      Temps:          0       0       0       0       0       0       0       0
  1025 ;;      Totals:         0       0       0       0       0       0       0       0
  1026 ;;Total ram usage:        0 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_main
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function _PWM3_Initialize
  1037  06CC                     _PWM3_Initialize:
  1038  06CC                     l880:	
  1039                           ;incstack = 0
  1040                           ; Regs used in _PWM3_Initialize: [wreg]
  1041                           
  1042                           
  1043                           ;newmain.c: 135:     PWM3CON = 0x90;
  1044  06CC  3090               	movlw	144
  1045  06CD  0146               	movlb	6	; select bank6
  1046  06CE  0096               	movwf	22	;volatile
  1047                           
  1048                           ;newmain.c: 136:     PWM3DCH = 0x3E;
  1049  06CF  303E               	movlw	62
  1050  06D0  0095               	movwf	21	;volatile
  1051                           
  1052                           ;newmain.c: 137:     PWM3DCL = 0x40;
  1053  06D1  3040               	movlw	64
  1054  06D2  0094               	movwf	20	;volatile
  1055  06D3                     l132:
  1056  06D3  0008               	return
  1057  06D4                     __end_of_PWM3_Initialize:
  1058                           
  1059                           	psect	text6
  1060  075F                     __ptext6:	
  1061 ;; *************** function _PIN_MANAGER_Initialize *****************
  1062 ;; Defined at:
  1063 ;;		line 62 in file "newmain.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1077 ;;      Params:         0       0       0       0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _PIN_MANAGER_Initialize
  1092  075F                     _PIN_MANAGER_Initialize:
  1093  075F                     l834:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  1096                           
  1097                           
  1098                           ;newmain.c: 65:     LATA = 0xFF;
  1099  075F  30FF               	movlw	255
  1100  0760  0140               	movlb	0	; select bank0
  1101  0761  0098               	movwf	24	;volatile
  1102  0762                     l836:
  1103                           
  1104                           ;newmain.c: 66:     LATB = 0x00;
  1105  0762  0199               	clrf	25	;volatile
  1106  0763                     l838:
  1107                           
  1108                           ;newmain.c: 67:     LATC = 0x00;
  1109  0763  019A               	clrf	26	;volatile
  1110                           
  1111                           ;newmain.c: 70:     TRISA = 0x10;
  1112  0764  3010               	movlw	16
  1113  0765  0092               	movwf	18	;volatile
  1114                           
  1115                           ;newmain.c: 71:     TRISB = 0xF0;
  1116  0766  30F0               	movlw	240
  1117  0767  0093               	movwf	19	;volatile
  1118                           
  1119                           ;newmain.c: 72:     TRISC = 0xFF;
  1120  0768  30FF               	movlw	255
  1121  0769  0094               	movwf	20	;volatile
  1122                           
  1123                           ;newmain.c: 75:     ANSELC = 0xFB;
  1124  076A  30FB               	movlw	251
  1125  076B  017E               	movlb	62	; select bank62
  1126  076C  00CE               	movwf	78	;volatile
  1127                           
  1128                           ;newmain.c: 76:     ANSELB = 0xF0;
  1129  076D  30F0               	movlw	240
  1130  076E  00C3               	movwf	67	;volatile
  1131                           
  1132                           ;newmain.c: 77:     ANSELA = 0x10;
  1133  076F  3010               	movlw	16
  1134  0770  00B8               	movwf	56	;volatile
  1135  0771                     l840:
  1136                           
  1137                           ;newmain.c: 80:     WPUB = 0x00;
  1138  0771  01C4               	clrf	68	;volatile
  1139  0772                     l842:
  1140                           
  1141                           ;newmain.c: 81:     WPUA = 0x00;
  1142  0772  01B9               	clrf	57	;volatile
  1143                           
  1144                           ;newmain.c: 82:     WPUC = 0x04;
  1145  0773  3004               	movlw	4
  1146  0774  00CF               	movwf	79	;volatile
  1147                           
  1148                           ;newmain.c: 85:     ODCONA = 0x04;
  1149  0775  3004               	movlw	4
  1150  0776  00BA               	movwf	58	;volatile
  1151  0777                     l844:
  1152                           
  1153                           ;newmain.c: 86:     ODCONB = 0x00;
  1154  0777  01C5               	clrf	69	;volatile
  1155  0778                     l846:
  1156                           
  1157                           ;newmain.c: 87:     ODCONC = 0x00;
  1158  0778  01D0               	clrf	80	;volatile
  1159                           
  1160                           ;newmain.c: 90:     SLRCONA = 0x37;
  1161  0779  3037               	movlw	55
  1162  077A  00BB               	movwf	59	;volatile
  1163                           
  1164                           ;newmain.c: 91:     SLRCONB = 0xF0;
  1165  077B  30F0               	movlw	240
  1166  077C  00C6               	movwf	70	;volatile
  1167                           
  1168                           ;newmain.c: 92:     SLRCONC = 0xFF;
  1169  077D  30FF               	movlw	255
  1170  077E  00D1               	movwf	81	;volatile
  1171                           
  1172                           ;newmain.c: 95:     INLVLA = 0x3F;
  1173  077F  303F               	movlw	63
  1174  0780  00BC               	movwf	60	;volatile
  1175                           
  1176                           ;newmain.c: 96:     INLVLB = 0xF0;
  1177  0781  30F0               	movlw	240
  1178  0782  00C7               	movwf	71	;volatile
  1179                           
  1180                           ;newmain.c: 97:     INLVLC = 0xFF;
  1181  0783  30FF               	movlw	255
  1182  0784  00D2               	movwf	82	;volatile
  1183  0785                     l848:
  1184                           
  1185                           ;newmain.c: 100:     TRISA2 = 0;
  1186  0785  0140               	movlb	0	; select bank0
  1187  0786  1112               	bcf	18,2	;volatile
  1188  0787                     l850:
  1189                           
  1190                           ;newmain.c: 101:     TRISB5 = 0;
  1191  0787  1293               	bcf	19,5	;volatile
  1192  0788                     l852:
  1193                           
  1194                           ;newmain.c: 102:     TRISA5 = 1;
  1195  0788  1692               	bsf	18,5	;volatile
  1196  0789                     l854:
  1197                           
  1198                           ;newmain.c: 103:     TRISC2 = 1;
  1199  0789  1514               	bsf	20,2	;volatile
  1200  078A                     l856:
  1201                           
  1202                           ;newmain.c: 104:     TRISC0 = 0;
  1203  078A  1014               	bcf	20,0	;volatile
  1204  078B                     l858:
  1205                           
  1206                           ;newmain.c: 105:     TRISC7 = 0;
  1207  078B  1394               	bcf	20,7	;volatile
  1208  078C                     l860:
  1209                           
  1210                           ;newmain.c: 106:     ANSELAbits.ANSA4 = 1;
  1211  078C  017E               	movlb	62	; select bank62
  1212  078D  1638               	bsf	56,4	;volatile
  1213  078E                     l862:
  1214                           
  1215                           ;newmain.c: 107:     ANSELAbits.ANSA5 = 1;
  1216  078E  16B8               	bsf	56,5	;volatile
  1217  078F                     l864:
  1218                           
  1219                           ;newmain.c: 108:     ANSELBbits.ANSB7 = 1;
  1220  078F  17C3               	bsf	67,7	;volatile
  1221                           
  1222                           ;newmain.c: 110:     RA2PPS = 0x03;
  1223  0790  3003               	movlw	3
  1224  0791  0092               	movwf	18	;volatile
  1225  0792                     l123:
  1226  0792  0008               	return
  1227  0793                     __end_of_PIN_MANAGER_Initialize:
  1228                           
  1229                           	psect	text7
  1230  06C1                     __ptext7:	
  1231 ;; *************** function _OSCILLATOR_Initialize *****************
  1232 ;; Defined at:
  1233 ;;		line 115 in file "newmain.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		status,2
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1247 ;;      Params:         0       0       0       0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_main
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function _OSCILLATOR_Initialize
  1262  06C1                     _OSCILLATOR_Initialize:
  1263  06C1                     l866:	
  1264                           ;incstack = 0
  1265                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
  1266                           
  1267                           
  1268                           ;newmain.c: 117:     OSCEN = 0x00;
  1269  06C1  0151               	movlb	17	; select bank17
  1270  06C2  0191               	clrf	17	;volatile
  1271                           
  1272                           ;newmain.c: 118:     OSCFRQ = 0x00;
  1273  06C3  0193               	clrf	19	;volatile
  1274                           
  1275                           ;newmain.c: 119:     OSCTUNE = 0x00;
  1276  06C4  0192               	clrf	18	;volatile
  1277  06C5                     l126:
  1278  06C5  0008               	return
  1279  06C6                     __end_of_OSCILLATOR_Initialize:
  1280                           
  1281                           	psect	text8
  1282  06C6                     __ptext8:	
  1283 ;; *************** function _ADC *****************
  1284 ;; Defined at:
  1285 ;;		line 140 in file "newmain.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1299 ;;      Params:         0       0       0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _ADC
  1314  06C6                     _ADC:
  1315  06C6                     l882:	
  1316                           ;incstack = 0
  1317                           ; Regs used in _ADC: [wreg]
  1318                           
  1319                           
  1320                           ;newmain.c: 144:     ADCON0= 0b00010001;
  1321  06C6  3011               	movlw	17
  1322  06C7  0141               	movlb	1	; select bank1
  1323  06C8  009D               	movwf	29	;volatile
  1324                           
  1325                           ;newmain.c: 146:     ADCON1 = 0b10010000;
  1326  06C9  3090               	movlw	144
  1327  06CA  009E               	movwf	30	;volatile
  1328  06CB                     l135:
  1329  06CB  0008               	return
  1330  06CC                     __end_of_ADC:
  1331  007E                     btemp	set	126	;btemp
  1332  007E                     wtemp0	set	126
  1333                           
  1334                           	psect	config
  1335                           
  1336                           ;Config register CONFIG1 @ 0x8007
  1337                           ;	External Oscillator Mode Selection bits
  1338                           ;	FEXTOSC = OFF, Oscillator not enabled
  1339                           ;	Power-up Default Value for COSC bits
  1340                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  1341                           ;	Clock Out Enable bit
  1342                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  1343                           ;	VDD Range Analog Calibration Selection bit
  1344                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  1345  8007                     	org	32775
  1346  8007  3FED               	dw	16365
  1347                           
  1348                           ;Config register CONFIG2 @ 0x8008
  1349                           ;	Master Clear Enable bit
  1350                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  1351                           ;	Power-up Timer Selection bits
  1352                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1353                           ;	WDT Operating Mode bits
  1354                           ;	WDTE = OFF, WDT disabled; SEN is ignored
  1355                           ;	Brown-out Reset Enable bits
  1356                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  1357                           ;	Brown-out Reset Voltage Selection bit
  1358                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  1359                           ;	PPSLOCKED One-Way Set Enable bit
  1360                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
  1361                           ;	Stack Overflow/Underflow Reset Enable bit
  1362                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  1363  8008                     	org	32776
  1364  8008  3FE7               	dw	16359
  1365                           
  1366                           ;Config register CONFIG4 @ 0x800A
  1367                           ;	Boot Block Size Selection bits
  1368                           ;	BBSIZE = BB512, 512 words boot block size
  1369                           ;	Boot Block Enable bit
  1370                           ;	BBEN = OFF, Boot Block is disabled
  1371                           ;	SAF Enable bit
  1372                           ;	SAFEN = OFF, SAF is disabled
  1373                           ;	Application Block Write Protection bit
  1374                           ;	WRTAPP = OFF, Application Block is not write-protected
  1375                           ;	Boot Block Write Protection bit
  1376                           ;	WRTB = OFF, Boot Block is not write-protected
  1377                           ;	Configuration Registers Write Protection bit
  1378                           ;	WRTC = OFF, Configuration Registers are not write-protected
  1379                           ;	Storage Area Flash (SAF) Write Protection bit
  1380                           ;	WRTSAF = OFF, SAF is not write-protected
  1381                           ;	Low Voltage Programming Enable bit
  1382                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  1383  800A                     	org	32778
  1384  800A  3FFF               	dw	16383
  1385                           
  1386                           ;Config register CONFIG5 @ 0x800B
  1387                           ;	User Program Flash Memory Code Protection bit
  1388                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  1389  800B                     	org	32779
  1390  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0       8
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Read_adc
    _main->_TMR2_Initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      98
                                              2 COMMON     1     1      0
                                _ADC
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                           _Read_adc
                    _TMR2_Initialize
                           _calcular
 ---------------------------------------------------------------------------------
 (1) _calcular                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Read_adc                                             2     2      0       0
                                              0 COMMON     2     2      0
                               _leer
 ---------------------------------------------------------------------------------
 (2) _leer                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _PWM3_Initialize
   _Read_adc
     _leer
   _TMR2_Initialize
   _calcular

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      15       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      15      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Nov 26 00:18:13 2020

                            l123 0792                              l132 06D3                              l126 06C5  
                            l150 07B4                              l135 06CB                              l144 075E  
                            l153 07D1                              l129 06E1                              l147 0797  
                            l171 0722                              l156 07EB                              l164 0707  
                            l166 0709                              _ADC 06C6                              l820 0732  
                            l900 07C6                              l830 0751                              l822 0738  
                            l910 07E3                              l902 07C9                              l840 0771  
                            l832 0758                              l824 073D                              l912 07E6  
                            l904 07CD                              l920 06FA                              l850 0787  
                            l842 0772                              l834 075F                              l826 0743  
                            l906 07D0                              l922 0704                              l914 06E2  
                            l930 0717                              l860 078C                              l852 0788  
                            l844 0777                              l836 0762                              l828 074A  
                            l908 07D5                              l916 06ED                              l932 071A  
                            l924 070A                              l862 078E                              l854 0789  
                            l846 0778                              l838 0763                              l870 06D7  
                            l918 06F7                              l934 071D                              l926 070D  
                            l864 078F                              l856 078A                              l848 0785  
                            l880 06CC                              l872 06D8                              l936 0728  
                            l928 0710                              l882 06C6                              l866 06C1  
                            l858 078B                              l890 07A9                              l874 06DB  
                            l892 07AC                              l884 0793                              l876 06DC  
                            l868 06D4                              l894 07B0                              l886 0796  
                            l878 06DE                              l896 07B3                              l888 079B  
                            l898 07B8                              u110 0738                              u111 0737  
                            u120 0743                              u121 0742                              u130 0751  
                            u131 0750                              u140 079B                              u141 079A  
                            u150 07B8                              u151 07B7                              u207 072B  
                            u160 07D5                              u161 07D4                              u170 06ED  
                            u171 06EC                              u180 06F7                              u181 06F6  
                            u190 0704                              u191 0703                              u175 06E9  
                            u185 06F3                              u195 0700                  _TMR2_Initialize 06D4  
                            wreg 0009                             ?_ADC 007A                             _LATA 0018  
                           _LATB 0019                             _LATC 001A                             _T2PR 028D  
                           _WPUA 1F39                             _WPUB 1F44                             _WPUC 1F4F  
                           _main 070A                             _leer 0732                             btemp 007E  
                           start 0002                            ??_ADC 007A   __size_of_OSCILLATOR_Initialize 0005  
  __end_of_OSCILLATOR_Initialize 06C6                            ?_main 007A                            ?_leer 007A  
                          _T2CON 028E                            _T2HLT 028F                            _T2TMR 028C  
                          _T2RST 0291                            _OSCEN 0891                            _TRISA 0012  
                          _TRISB 0013                            _TRISC 0014                            _LecA4 0072  
                          _LecA5 0070                            _LecB7 0020          __end_of_PWM3_Initialize 06D4  
                          status 0003                            wtemp0 007E                  __initialization 07EC  
                   __end_of_main 0732                     __end_of_leer 075F                 __end_of_Read_adc 07EC  
        __end_of_TMR2_Initialize 06E2                           ??_main 007C                           ??_leer 007A  
                         _ADCON0 009D                           _ADCON1 009E                           _ADRESH 009C  
                         _ADRESL 009B                           _ANSELA 1F38                           _ANSELB 1F43  
                         _ANSELC 1F4E                           _RA2PPS 1F12                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           _OSCFRQ 0893  
                         _TRISA2 0092                           _TRISC0 00A0                           _TRISA5 0095  
                         _TRISC2 00A2                           _TRISB5 009D                           _TRISC7 00A7  
               __end_of_calcular 070A                           _estado 0026                 ?_PWM3_Initialize 007A  
        __end_of__initialization 07FD                   __pcstackCOMMON 007A                 ?_TMR2_Initialize 007A  
                     __pbssBANK0 0020                        ?_Read_adc 007A                       __pmaintext 070A  
                      ?_calcular 007A                          _OSCTUNE 0892                          _PWM3DCH 0315  
                        _PWM3DCL 0314                          _PWM3CON 0316                          _SLRCONA 1F3B  
                        _SLRCONB 1F46                          _SLRCONC 1F51                       ??_Read_adc 007A  
                     _frecuencia 0022                          _Lectura 0074                          __ptext1 06E2  
                        __ptext2 06D4                          __ptext3 0793                          __ptext4 0732  
                        __ptext5 06CC                          __ptext6 075F                          __ptext7 06C1  
                        __ptext8 06C6                     __size_of_ADC 0006            _OSCILLATOR_Initialize 06C1  
                     ??_calcular 007A         ??_PIN_MANAGER_Initialize 007A             end_of_initialization 07FD  
                     _resultHigh 0078           ?_OSCILLATOR_Initialize 007A              start_initialization 07EC  
                    __end_of_ADC 06CC  __size_of_PIN_MANAGER_Initialize 0034                __size_of_Read_adc 0059  
       __size_of_PWM3_Initialize 0008                      __pbssCOMMON 0070                        ___latbits 0001  
       __size_of_TMR2_Initialize 000E                __size_of_calcular 0028                        __pnvBANK0 0026  
         _PIN_MANAGER_Initialize 075F                        _cicloutil 0024         TMR2_Initialize@nuevafrec 007A  
                       _T2CLKCON 0290                         _LATBbits 0019                         _LATCbits 001A  
                       _PIR1bits 070D                        _resultLow 0076                ??_PWM3_Initialize 007A  
                     _ADCON0bits 009D                ??_TMR2_Initialize 007C                         _Read_adc 0793  
        ??_OSCILLATOR_Initialize 007A                       _ANSELAbits 1F38                       _ANSELBbits 1F43  
                       _calcular 06E2                    __size_of_main 0028                    __size_of_leer 002D  
        ?_PIN_MANAGER_Initialize 007A   __end_of_PIN_MANAGER_Initialize 0793                  _PWM3_Initialize 06CC  
